|DE2_115
CLOCK_50 => i2c_user_logic_ADC:inst_i2c_user_logic_ADC.clk
KEY[0] => i2c_user_logic_ADC:inst_i2c_user_logic_ADC.reset
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
GPIO[0] <> i2c_user_logic_ADC:inst_i2c_user_logic_ADC.sda
GPIO[1] <> i2c_user_logic_ADC:inst_i2c_user_logic_ADC.scl
GPIO[2] <> <UNC>
GPIO[3] <> <UNC>
GPIO[4] <> <UNC>
GPIO[5] <> <UNC>
GPIO[6] <> <UNC>
GPIO[7] <> <UNC>
GPIO[8] <> <UNC>
GPIO[9] <> <UNC>
GPIO[10] <> <UNC>
GPIO[11] <> <UNC>
GPIO[12] <> <UNC>
GPIO[13] <> <UNC>
GPIO[14] <> <UNC>
GPIO[15] <> <UNC>
GPIO[16] <> <UNC>
GPIO[17] <> <UNC>
GPIO[18] <> <UNC>
GPIO[19] <> <UNC>
GPIO[20] <> <UNC>
GPIO[21] <> <UNC>
GPIO[22] <> <UNC>
GPIO[23] <> <UNC>
GPIO[24] <> <UNC>
GPIO[25] <> <UNC>
GPIO[26] <> <UNC>
GPIO[27] <> <UNC>
GPIO[28] <> <UNC>
GPIO[29] <> <UNC>
GPIO[30] <> <UNC>
GPIO[31] <> <UNC>
GPIO[32] <> <UNC>
GPIO[33] <> <UNC>
GPIO[34] <> <UNC>
GPIO[35] <> <UNC>


|DE2_115|i2c_user_logic_ADC:inst_i2c_user_logic_ADC
clk => i2c_master:inst_i2c_master.clk
clk => Data_out[0]~reg0.CLK
clk => Data_out[1]~reg0.CLK
clk => Data_out[2]~reg0.CLK
clk => Data_out[3]~reg0.CLK
clk => Data_out[4]~reg0.CLK
clk => Data_out[5]~reg0.CLK
clk => Data_out[6]~reg0.CLK
clk => Data_out[7]~reg0.CLK
clk => data_wr[0].CLK
clk => data_wr[1].CLK
clk => data_wr[2].CLK
clk => data_wr[3].CLK
clk => data_wr[4].CLK
clk => data_wr[5].CLK
clk => data_wr[6].CLK
clk => data_wr[7].CLK
clk => i2c_addr[1].CLK
clk => i2c_addr[2].CLK
clk => i2c_addr[3].CLK
clk => i2c_addr[4].CLK
clk => i2c_addr[5].CLK
clk => i2c_addr[6].CLK
clk => i2c_addr[7].CLK
clk => i2c_rw.CLK
clk => i2c_ena.CLK
clk => i2c_busy_prev.CLK
clk => statebuffer~5.DATAIN
reset => i2c_master:inst_i2c_master.reset_n
reset => statebuffer~7.DATAIN
reset => Data_out[0]~reg0.ENA
reset => i2c_busy_prev.ENA
reset => i2c_ena.ENA
reset => i2c_rw.ENA
reset => i2c_addr[7].ENA
reset => i2c_addr[6].ENA
reset => i2c_addr[5].ENA
reset => i2c_addr[4].ENA
reset => i2c_addr[3].ENA
reset => i2c_addr[2].ENA
reset => i2c_addr[1].ENA
reset => data_wr[7].ENA
reset => data_wr[6].ENA
reset => data_wr[5].ENA
reset => data_wr[4].ENA
reset => data_wr[3].ENA
reset => data_wr[2].ENA
reset => data_wr[1].ENA
reset => data_wr[0].ENA
reset => Data_out[7]~reg0.ENA
reset => Data_out[6]~reg0.ENA
reset => Data_out[5]~reg0.ENA
reset => Data_out[4]~reg0.ENA
reset => Data_out[3]~reg0.ENA
reset => Data_out[2]~reg0.ENA
reset => Data_out[1]~reg0.ENA
Mchnstate[0] => data_wr.DATAB
Mchnstate[1] => data_wr.DATAB
Mchnstate[2] => ~NO_FANOUT~
Mchnstate[3] => ~NO_FANOUT~
iData[0] => ~NO_FANOUT~
iData[1] => ~NO_FANOUT~
iData[2] => ~NO_FANOUT~
iData[3] => ~NO_FANOUT~
iData[4] => ~NO_FANOUT~
iData[5] => ~NO_FANOUT~
iData[6] => ~NO_FANOUT~
iData[7] => ~NO_FANOUT~
iData[8] => ~NO_FANOUT~
iData[9] => ~NO_FANOUT~
iData[10] => ~NO_FANOUT~
iData[11] => ~NO_FANOUT~
iData[12] => ~NO_FANOUT~
iData[13] => ~NO_FANOUT~
iData[14] => ~NO_FANOUT~
iData[15] => ~NO_FANOUT~
Data_out[0] <= Data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[1] <= Data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[2] <= Data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[3] <= Data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[4] <= Data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[5] <= Data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[6] <= Data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Data_out[7] <= Data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sda <> i2c_master:inst_i2c_master.sda
scl <> i2c_master:inst_i2c_master.scl


|DE2_115|i2c_user_logic_ADC:inst_i2c_user_logic_ADC|i2c_master:inst_i2c_master
clk => data_rx[0].CLK
clk => data_rx[1].CLK
clk => data_rx[2].CLK
clk => data_rx[3].CLK
clk => data_rx[4].CLK
clk => data_rx[5].CLK
clk => data_rx[6].CLK
clk => data_rx[7].CLK
clk => data_tx[0].CLK
clk => data_tx[1].CLK
clk => data_tx[2].CLK
clk => data_tx[3].CLK
clk => data_tx[4].CLK
clk => data_tx[5].CLK
clk => data_tx[6].CLK
clk => data_tx[7].CLK
clk => addr_rw[0].CLK
clk => addr_rw[1].CLK
clk => addr_rw[2].CLK
clk => addr_rw[3].CLK
clk => addr_rw[4].CLK
clk => addr_rw[5].CLK
clk => addr_rw[6].CLK
clk => addr_rw[7].CLK
clk => data_rd[0]~reg0.CLK
clk => data_rd[1]~reg0.CLK
clk => data_rd[2]~reg0.CLK
clk => data_rd[3]~reg0.CLK
clk => data_rd[4]~reg0.CLK
clk => data_rd[5]~reg0.CLK
clk => data_rd[6]~reg0.CLK
clk => data_rd[7]~reg0.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => ack_error~reg0.CLK
clk => sda_int.CLK
clk => scl_ena.CLK
clk => busy~reg0.CLK
clk => data_clk.CLK
clk => scl_clk.CLK
clk => data_clk_prev.CLK
clk => stretch.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => state~1.DATAIN
reset_n => data_rd[0]~reg0.ACLR
reset_n => data_rd[1]~reg0.ACLR
reset_n => data_rd[2]~reg0.ACLR
reset_n => data_rd[3]~reg0.ACLR
reset_n => data_rd[4]~reg0.ACLR
reset_n => data_rd[5]~reg0.ACLR
reset_n => data_rd[6]~reg0.ACLR
reset_n => data_rd[7]~reg0.ACLR
reset_n => bit_cnt[0].PRESET
reset_n => bit_cnt[1].PRESET
reset_n => bit_cnt[2].PRESET
reset_n => ack_error~reg0.ACLR
reset_n => sda_int.PRESET
reset_n => scl_ena.ACLR
reset_n => busy~reg0.PRESET
reset_n => stretch.ACLR
reset_n => count[0].ACLR
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => count[4].ACLR
reset_n => count[5].ACLR
reset_n => count[6].ACLR
reset_n => count[7].ACLR
reset_n => count[8].ACLR
reset_n => count[9].ACLR
reset_n => state~3.DATAIN
reset_n => data_clk_prev.ENA
reset_n => scl_clk.ENA
reset_n => data_clk.ENA
reset_n => addr_rw[7].ENA
reset_n => addr_rw[6].ENA
reset_n => addr_rw[5].ENA
reset_n => addr_rw[4].ENA
reset_n => addr_rw[3].ENA
reset_n => addr_rw[2].ENA
reset_n => addr_rw[1].ENA
reset_n => addr_rw[0].ENA
reset_n => data_tx[7].ENA
reset_n => data_tx[6].ENA
reset_n => data_tx[5].ENA
reset_n => data_tx[4].ENA
reset_n => data_tx[3].ENA
reset_n => data_tx[2].ENA
reset_n => data_tx[1].ENA
reset_n => data_tx[0].ENA
reset_n => data_rx[7].ENA
reset_n => data_rx[6].ENA
reset_n => data_rx[5].ENA
reset_n => data_rx[4].ENA
reset_n => data_rx[3].ENA
reset_n => data_rx[2].ENA
reset_n => data_rx[1].ENA
reset_n => data_rx[0].ENA
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => process_1.IN1
ena => busy.OUTPUTSELECT
ena => sda_int.OUTPUTSELECT
ena => state.OUTPUTSELECT
ena => state.OUTPUTSELECT
ena => sda_int.OUTPUTSELECT
ena => Selector0.IN6
ena => Selector18.IN4
ena => Selector17.IN2
ena => Selector22.IN1
addr[0] => addr_rw.DATAB
addr[0] => Equal2.IN6
addr[1] => addr_rw.DATAB
addr[1] => Equal2.IN5
addr[2] => addr_rw.DATAB
addr[2] => Equal2.IN4
addr[3] => addr_rw.DATAB
addr[3] => Equal2.IN3
addr[4] => addr_rw.DATAB
addr[4] => Equal2.IN2
addr[5] => addr_rw.DATAB
addr[5] => Equal2.IN1
addr[6] => addr_rw.DATAB
addr[6] => Equal2.IN0
rw => addr_rw.DATAB
rw => Equal2.IN7
data_wr[0] => data_tx.DATAB
data_wr[0] => Mux4.IN7
data_wr[1] => data_tx.DATAB
data_wr[1] => Mux4.IN6
data_wr[2] => data_tx.DATAB
data_wr[2] => Mux4.IN5
data_wr[3] => data_tx.DATAB
data_wr[3] => Mux4.IN4
data_wr[4] => data_tx.DATAB
data_wr[4] => Mux4.IN3
data_wr[5] => data_tx.DATAB
data_wr[5] => Mux4.IN2
data_wr[6] => data_tx.DATAB
data_wr[6] => Mux4.IN1
data_wr[7] => data_tx.DATAB
data_wr[7] => Mux4.IN0
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[0] <= data_rd[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[1] <= data_rd[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[2] <= data_rd[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[3] <= data_rd[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[4] <= data_rd[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[5] <= data_rd[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[6] <= data_rd[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[7] <= data_rd[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ack_error <= ack_error~reg0.DB_MAX_OUTPUT_PORT_TYPE
sda <> sda
scl <> scl


